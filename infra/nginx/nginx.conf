
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;

    # Upstream services
    upstream auth_service {
        least_conn;
        server auth-service:3001 max_fails=3 fail_timeout=30s;
    }

    upstream profile_service {
        least_conn;
        server profile-service:3002 max_fails=3 fail_timeout=30s;
    }

    upstream match_service {
        least_conn;
        server match-service:3003 max_fails=3 fail_timeout=30s;
    }

    upstream chat_service {
        least_conn;
        server chat-service:3004 max_fails=3 fail_timeout=30s;
    }

    upstream payment_service {
        least_conn;
        server payment-service:3005 max_fails=3 fail_timeout=30s;
    }

    upstream location_service {
        least_conn;
        server location-service:9000 max_fails=3 fail_timeout=30s;
    }

    upstream ai_service {
        least_conn;
        server ai-service:8000 max_fails=3 fail_timeout=30s;
    }

    upstream blockchain_service {
        least_conn;
        server blockchain-service:3010 max_fails=3 fail_timeout=30s;
    }

    upstream media_service {
        least_conn;
        server media-service:3007 max_fails=3 fail_timeout=30s;
    }

    upstream analytics_service {
        least_conn;
        server analytics-service:3008 max_fails=3 fail_timeout=30s;
    }

    # Main API Gateway
    server {
        listen 80;
        server_name api.etincel.app;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name api.etincel.app;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/etincel.crt;
        ssl_certificate_key /etc/nginx/ssl/etincel.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Auth Service
        location /api/v1/auth {
            limit_req zone=auth_limit burst=20 nodelay;
            proxy_pass http://auth_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Profile Service
        location /api/v1/profiles {
            limit_req zone=api_limit burst=50 nodelay;
            proxy_pass http://profile_service;
            include /etc/nginx/proxy_params.conf;
        }

        # Match Service
        location /api/v1/matches {
            limit_req zone=api_limit burst=100 nodelay;
            proxy_pass http://match_service;
            include /etc/nginx/proxy_params.conf;
        }

        # Chat Service (Socket.IO)
        location /api/v1/chat {
            proxy_pass http://chat_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 86400;
        }

        # Payment Service (Stripe Webhooks)
        location /api/v1/payments {
            limit_req zone=api_limit burst=30 nodelay;
            proxy_pass http://payment_service;
            include /etc/nginx/proxy_params.conf;
            client_max_body_size 10M;
        }

        # Location Service
        location /api/v1/location {
            limit_req zone=api_limit burst=200 nodelay;
            proxy_pass http://location_service;
            include /etc/nginx/proxy_params.conf;
        }

        # AI Service
        location /api/v1/ai {
            limit_req zone=api_limit burst=50 nodelay;
            proxy_pass http://ai_service;
            include /etc/nginx/proxy_params.conf;
            proxy_read_timeout 300s;
        }

        # Blockchain Service
        location /api/v1/blockchain {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://blockchain_service;
            include /etc/nginx/proxy_params.conf;
        }

        # Media Service
        location /api/v1/media {
            limit_req zone=api_limit burst=50 nodelay;
            proxy_pass http://media_service;
            include /etc/nginx/proxy_params.conf;
            client_max_body_size 50M;
        }

        # Analytics Service
        location /api/v1/analytics {
            limit_req zone=api_limit burst=100 nodelay;
            proxy_pass http://analytics_service;
            include /etc/nginx/proxy_params.conf;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Frontend - Main App
    server {
        listen 80;
        server_name etincel.app www.etincel.app;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name etincel.app www.etincel.app;

        ssl_certificate /etc/nginx/ssl/etincel.crt;
        ssl_certificate_key /etc/nginx/ssl/etincel.key;

        location / {
            proxy_pass http://desktop-web:3000;
            include /etc/nginx/proxy_params.conf;
        }
    }

    # Admin Dashboard
    server {
        listen 80;
        server_name admin.etincel.app;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name admin.etincel.app;

        ssl_certificate /etc/nginx/ssl/etincel.crt;
        ssl_certificate_key /etc/nginx/ssl/etincel.key;

        # Admin IP whitelist (optional)
        # allow 203.0.113.0/24;
        # deny all;

        location / {
            proxy_pass http://admin-dashboard:80;
            include /etc/nginx/proxy_params.conf;
        }
    }
}